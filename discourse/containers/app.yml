# IMPORTANT: SET A SECRET PASSWORD in Postgres for the Discourse User
# TODO: change SOME_SECRET in this template

templates:
  - "templates/web.template.yml"
  - "templates/web.ratelimited.template.yml"
  - "templates/web.ipv6.template.yml"
## Uncomment these two lines if you wish to add Lets Encrypt (https)
  #- "templates/web.ssl.template.yml"
  #- "templates/web.letsencrypt.ssl.template.yml"

## which TCP/IP ports should this container expose?
## If you want Discourse to share a port with another webserver like Apache or nginx,
## see https://meta.discourse.org/t/17247 for details
expose:
  # - "8000:80"   # http
  # - "443:443" # https

# Use 'links' key to link containers together, aka use Docker --link flag.
# links:
  # - link:
      # name: data
      # alias: data
  # - link:
      # name: nginx
      # alias: nginx

# any extra arguments for Docker?
docker_args:
  - '--network discourse'
  # - '--label com.centurylinklabs.watchtower.enable=false'
params:
  ## Which Git revision should this container use? (default: tests-passed)
  #version: stable

env:
  LC_ALL: en_US.UTF-8
  LANG: en_US.UTF-8
  LANGUAGE: en_US.UTF-8
  DISCOURSE_DEFAULT_LOCALE: ar

  ## How many concurrent web requests are supported? Depends on memory and CPU cores.
  ## will be set automatically by bootstrap based on detected CPUs, or you can override
  UNICORN_WORKERS: 12

  ## TODO: The domain name this Discourse instance will respond to
  DISCOURSE_HOSTNAME: 'discourse.aosus.org'

  ## Uncomment if you want the container to be started with the same
  ## hostname (-h option) as specified above (default "$hostname-$config")
  #DOCKER_USE_HOSTNAME: true

  ## TODO: List of comma delimited emails that will be made admin and developer
  ## on initial signup example 'user1@example.com,user2@example.com'
  DISCOURSE_DEVELOPER_EMAILS: 'acc@aosus.org'

  ## TODO: The SMTP mail server used to validate new accounts and send notifications
  # SMTP ADDRESS, username, and password are required
  # WARNING the char '#' in SMTP password can cause problems!
  # DISCOURSE_SMTP_ADDRESS: smtp.email.me-jeddah-1.oci.oraclecloud.com
  # DISCOURSE_SMTP_PORT: 587
  # DISCOURSE_SMTP_USER_NAME: "ocid1.user.oc1..aaaaaaaawotk2inxqyojzscjifrty4d27mjxuoxq3wwhnl5s76xubp7g4rja@ocid1.tenancy.oc1..aaaaaaaamsnkmv7r7ge76cjtcyusdpfyl77loyjfw7epb6rkmqdyz5vlknkq.rf.com"
  # DISCOURSE_SMTP_PASSWORD: "(Xxk$786>Yj;vZA(xeNP"
  # DISCOURSE_SMTP_ENABLE_START_TLS: true         # (optional, default true)
  # DISCOURSE_SMTP_DOMAIN: discourse.aosus.org    # (required by some providers)
  # DISCOURSE_NOTIFICATION_EMAIL: no-reply@discourse.aosus.org    # (address to send notifications from)

  DISCOURSE_SMTP_ADDRESS: cups-g11.aosus.org
  DISCOURSE_SMTP_PORT: 587
  DISCOURSE_SMTP_USER_NAME: "system@discourse.aosus.org"
  DISCOURSE_SMTP_PASSWORD: "(DISCOURSE_SMTP_PASSWORD)"
  DISCOURSE_SMTP_ENABLE_START_TLS: true         # (optional, default true)
  DISCOURSE_SMTP_DOMAIN: discourse.aosus.org    # (required by some providers)
  DISCOURSE_NOTIFICATION_EMAIL: system@discourse.aosus.org    # (address to send notifications from)
  ## If you added the Lets Encrypt template, uncomment below to get a free SSL certificate
  #LETSENCRYPT_ACCOUNT_EMAIL: me@example.com

  ## TODO: configure connectivity to the databases
  DISCOURSE_DB_SOCKET: '5432'
  DISCOURSE_DB_USERNAME: discourse
  DISCOURSE_DB_PASSWORD: (DISCOURSE_DB_PASSWORD)
  DISCOURSE_DB_HOST: db
  DISCOURSE_REDIS_HOST: db

  ## The http or https CDN address for this Discourse instance (configured to pull)
  ## see https://meta.discourse.org/t/14857 for details
  #DISCOURSE_CDN_URL: https://discourse-cdn.example.com
  
  ## The maxmind geolocation IP address key for IP address lookup
  ## see https://meta.discourse.org/t/-/137387/23 for details
  DISCOURSE_MAXMIND_LICENSE_KEY: (DISCOURSE_MAXMIND_LICENSE_KEY)

  DISCOURSE_USE_S3: true
  DISCOURSE_S3_REGION: "us-east-1"
  DISCOURSE_S3_INSTALL_CORS_RULE: true
  #DISCOURSE_S3_CONFIGURE_TOMBSTONE_POLICY: false
  DISCOURSE_S3_ENDPOINT: (DISCOURSE_S3_ENDPOINT)
  DISCOURSE_S3_ACCESS_KEY_ID: (DISCOURSE_S3_ACCESS_KEY_ID)
  DISCOURSE_S3_SECRET_ACCESS_KEY: (DISCOURSE_S3_SECRET_ACCESS_KEY)
  DISCOURSE_S3_CDN_URL: https://cdn-cf-discourse.aosus.org
  DISCOURSE_S3_BUCKET: discourse-cdn
  DISCOURSE_S3_BACKUP_BUCKET: discourse-backups
  DISCOURSE_BACKUP_LOCATION: s3


volumes:
  - volume:
      host: /home/aosus/discourse-data/app
      guest: /shared
  - volume:
      host: /home/aosus/discourse-data/app/log/var-log
      guest: /var/log

## Plugins go here
## see https://meta.discourse.org/t/19157 for details
hooks:
  # required for S3
  # after_assets_precompile:
  #   - exec:
  #       cd: $home
  #       cmd:
  #         - sudo -E -u discourse bundle exec rake s3:upload_assets
  #         - sudo -E -u discourse bundle exec rake s3:expire_missing_assets
  after_code:
    - exec:
        cd: $home/plugins
        cmd:
          - git clone https://github.com/discourse/docker_manager.git
          - git clone https://github.com/discourse/discourse-reactions
          - git clone https://github.com/discourse/discourse-category-experts
          - git clone https://github.com/discourse/discourse-solved
          #- git clone https://github.com/davidtaylorhq/discourse-telegram-notifications
          - git clone https://github.com/discourse/discourse-chat-integration
          - git clone https://github.com/discourse/discourse-math
          - git clone https://github.com/discourse/discourse-gamification # Gamification
          - git clone https://github.com/discourse/discourse-yearly-review # yearly review
          - git clone https://github.com/paviliondev/discourse-legal-tools # GDPR data export and so on
          - git clone https://github.com/discourse/discourse-google-one-tap # Google one tap login
          - git clone https://github.com/discourse/discourse-cakeday # Discourse cakeday and birthday plugin

## Remember, this is YAML syntax - you can only have one block with a name
run:
  - exec: echo "Beginning of custom commands"

  ## If you want to configure password login for root, uncomment and change:
  ## Use only one of the following lines:
  #- exec: /usr/sbin/usermod -p 'PASSWORD_HASH' root
  #- exec: /usr/sbin/usermod -p "$(mkpasswd -m sha-256 'RAW_PASSWORD')" root

  ## If you want to authorized additional users, uncomment and change:
  #- exec: ssh-import-id username
  #- exec: ssh-import-id anotherusername

  - exec: echo "End of custom commands"
  - exec: awk -F\# '{print $1;}' ~/.ssh/authorized_keys | awk 'BEGIN { print "Authorized SSH keys for this container:"; } NF>=2 {print $NF;}'